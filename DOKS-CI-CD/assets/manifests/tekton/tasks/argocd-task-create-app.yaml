apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: argocd-task-create-app
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Deployment
    tekton.dev/tags: deploy
    tekton.dev/displayName: "argocd"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    This task creates an Argo CD application.
    To do so, it requires the address of the Argo CD server and some form of
    authentication either a username/password or an authentication token.
  params:
    - name: application-name
      description: Name of the application to sync
      type: string
    - name: repo-url
      description: Application repository URL
      type: string
    - name: resources-path
      description: Application Kubernetes resources path in the repository
      type: string
    - name: dest-server
      description: Destination Kubernetes server URL
      default: https://kubernetes.default.svc
      type: string
    - name: dest-namespace
      description: Kubernetes namespace for the application
      type: string
    - name: flags
      default: --
      type: string
    - name: argocd-version
      default: v2.2.2
      type: string
  stepTemplate:
    envFrom:
      - configMapRef:
          name: argocd-env-configmap  # used for server address
      - secretRef:
          name: argocd-env-secret  # used for authentication (username/password or auth token)
  steps:
    - name: login
      image: quay.io/argoproj/argocd:$(params.argocd-version)
      script: |
        if [ -z "$ARGOCD_AUTH_TOKEN" ]; then
          yes | argocd login "$ARGOCD_SERVER" --username="$ARGOCD_USERNAME" --password="$ARGOCD_PASSWORD";
        fi

        argocd app create "$(params.application-name)" \
          --repo "$(params.repo-url)" \
          --path "$(params.resources-path)" \
          --dest-server "$(params.dest-server)" \
          --dest-namespace "$(params.dest-namespace)" \
          "$(params.flags)"
